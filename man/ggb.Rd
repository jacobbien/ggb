% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggb.R
\docType{package}
\name{ggb}
\alias{ggb}
\alias{ggb-package}
\alias{ggb}
\title{ggb: Graph-Guided Banding for Covariance Estimation}
\usage{
ggb(S, g, type = c("global", "local"), lambda = NULL, delta = NULL,
  flmin = 0.01, nlam = 20, max_depths = NULL, out_iter = 100,
  in_iter = 500, out_tol = 1e-04, in_tol = 1e-04, verbose = 0)
}
\arguments{
\item{S}{p-by-p sample covariance matrix}

\item{g}{seed graph (not necessarily connected)}

\item{type}{either "global" or "local"}

\item{lambda}{positive tuning parameter(s)}

\item{delta}{lower bound on eigenvalues (default, NULL, means no bound)}

\item{flmin}{ratio of smallest to largest lambda value (ignored if
\code{lambda} is nonnull)}

\item{nlam}{number of lambda values (ignored if \code{lambda} is nonnull)}

\item{max_depths}{maximal bandwidth(s) considered.  If type is "global",
this must be a single non-negative integer.  If type is "local", this
must be a p-vector of non-negative integers. Default is NULL, which
is equivalent to taking max_depths to be >= diameter(g).  (These are
referred to as M and M_j in the paper.)}

\item{out_iter}{number of iterations of outer loop (i.e., # of eigenvalue
decompositions). Ignored when \code{delta} is NULL.}

\item{in_iter}{number of iterations on inner loop (i.e., # cycles over
row/cols) when \code{type}
is "local".}

\item{out_tol}{convergence threshold for outer loop BCD (ignored when
\code{delta} is NULL)}

\item{in_tol}{convergence threshold for inner loop BCD when \code{type}
is "local".}

\item{verbose}{level of verbosity in printed output (3, 2, 1, 0)}
}
\description{
This package implements the two methods introduced in
Bien, J. (2018) "Graph-Guided Banding of the Covariance Matrix." Journal of
the American Statistical Association.
\url{http://arxiv.org/abs/1606.00451}

Computes the global or local GGB estimator (depending on \code{type}
argument) along a grid of lambda values.
}
\details{
The main function is \code{\link{ggb}}.

To evaluate the proximal operator, it uses the "closed form" of Yan and Bien
(2015) for the global GGB estimator as implemented in the R package \pkg{hsm}
and uses blockwise coordinate descent for the local GGB estimator.

If \code{delta} is non-NULL, then alternates between evaluating proximal
operator and projecting eigenvalues.

The weights used in this penalty are the square root of the group size.
}
\examples{
set.seed(123)
n <- 100
p <- 20
g <- igraph::graph.lattice(c(5, 4))
x <- matrix(rnorm(n * p), n, p)
S <- cov(x)
fit_global <- ggb(S, g, type = "global", nlam = 10)
fit_local <- ggb(S, g, type = "local", nlam = 10)
}
\seealso{
\code{\link{cv_ggb}}
}
